---
title: "Project Plan and EDA"
format:
    html:
        embed-resources: true
editor: visual
---

**Reading CSV**

```{r readingCSV}
fulldata <- read.csv("alzheimers_disease_data.csv")
fulldata$Diagnosis <- factor(fulldata$Diagnosis, levels = c(0, 1), labels = c("No", "Yes"))
str(fulldata)
```

On checking for NAs in the data, we found the result to be `r anyNA(fulldata)`.

**Dropping columns**

```{r dropcolumns}
fulldata <- subset(fulldata, select = -c(PatientID, DoctorInCharge))
```

**Tree Model**

```{r tree}
library(tree)
treemodel <- tree(Diagnosis ~ ., data = fulldata)
plot(treemodel)
text(treemodel)
```

**Cross Validation Model**

```{r CVModel, message=FALSE}
library(class)
library(caret)

set.seed(5003)
kfolds <- createFolds(fulldata$Diagnosis, k = 10)
create_training_and_test <- function(index, data) {
  train_data <- data[-index, ]
  test_data <- data[index, ]
  list(training = train_data, test = test_data)
}
kfold_training_and_test <- lapply(kfolds, create_training_and_test, data = fulldata)

fit_knn_and_reports_obs_and_pred <- function(data_list, k = 5) {
  train_data <- data_list[["training"]]
  test_data <- data_list[["test"]]
  train_arg <- train_data[ , -which(names(train_data) == "Diagnosis")] 
  test_arg <- test_data[ , -which(names(test_data) == "Diagnosis")] 
  cl_arg <- train_data[ ,"Diagnosis"]
  model <- knn(
    train = train_arg,
    test = test_arg,
    cl = cl_arg,
    k = k)
  list(observed = test_data[ , "Diagnosis"], predicted = model)
}
obs_and_pred <- lapply(kfold_training_and_test, fit_knn_and_reports_obs_and_pred)


performance_calcs <- function(obs_and_pred) {
  actual <- obs_and_pred[["observed"]]
  predicted <- obs_and_pred[["predicted"]]
  CM <- confusionMatrix(actual, predicted)
  CMtab <- CM$table
}
CMtablelist <- lapply(obs_and_pred, performance_calcs)
perform_measures_func <- function(CMtablelist) {
  Consol_CMtable <- Reduce(`+`, CMtablelist)
  Consol_CM <- confusionMatrix(Consol_CMtable)
  Sensit <- Consol_CM$byClass[["Sensitivity"]]
  Specif <- Consol_CM$byClass[["Specificity"]]
  Accura <- Consol_CM$overall[["Accuracy"]]
  TP <- Consol_CM$table["No", "No"]
  FP <- Consol_CM$table["No", "Yes"]
  FN <- Consol_CM$table["Yes", "No"]
  precision <- TP / (TP + FP)
  recall <- TP / (TP + FN)
  F1 <- 2 * (precision * recall) / (precision + recall)
  Performance_measures <- list(Sensitivity = Sensit, Specificity = Specif, Accuracy = Accura, F1 = F1)
}
perf_measures <- perform_measures_func(CMtablelist)
perf_measures
```

## Overview of the Problem

In our project, using anonymised patient information, medical history, 
cognitive and functional assessments, and several other factors, we intend to create a right sized model with adequate performance to diagnose if the patient has Alzheimer's or not.

According to Alzheimer's association, 1 in 3 older adult dies with Alzheimer's or another form of dementia. It kills more people than breast and prostate cancer combined. These statistics suggest that we have or will encounter people in our lives who suffer from some form of dementia. To date, the exact cause of Alzheimer's is not fully understood, but researchers have identified that vascular, genetics, and lifestyle & environmental factors contribute to its development. Therefore, early detection is critical to treat or prevent Alzheimer's. The ability to identify, detect and prevent, is crucial to sustain growing aging population in our societies. We believe our model can help people with early detection and intervention, and for governments to reduce the cost burden on Medicare. 


## Graphical description of the data

## Describe the data

## Clear description of potential challenges

## Performance metrics

## Models chosen

## Plan or schedule

